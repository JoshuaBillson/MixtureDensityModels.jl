var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = MixtureDensityNetworks","category":"page"},{"location":"#MixtureDensityNetworks","page":"Home","title":"MixtureDensityNetworks","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for MixtureDensityNetworks.","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [MixtureDensityNetworks]\nPrivate = false","category":"page"},{"location":"#MixtureDensityNetworks.MDN","page":"Home","title":"MixtureDensityNetworks.MDN","text":"Struct for storing the hyperparameters of the MDN model.\n\n\n\n\n\n","category":"type"},{"location":"#MixtureDensityNetworks.MDN-Tuple{}","page":"Home","title":"MixtureDensityNetworks.MDN","text":"MDN(; mixtures=5, layers=[128], η=1e-3, epochs=10, batchsize=16)\n\nDefines an MDN model with the given hyperparameters.\n\n\n\n\n\n","category":"method"},{"location":"#MixtureDensityNetworks.fit!-Tuple{MDN, Matrix{<:Number}, Matrix{<:Number}}","page":"Home","title":"MixtureDensityNetworks.fit!","text":"fit!(model, X, Y)\n\nFit the model to the data given by X and Y.\n\nX is expected to be a dxn matrix where d is the dimension of the data and n is the number of samples.\n\nY is expected to be a 1xn matrix where n is the number of samples.\n\n\n\n\n\n","category":"method"},{"location":"#MixtureDensityNetworks.likelihood_loss-NTuple{4, AbstractMatrix{Float32}}","page":"Home","title":"MixtureDensityNetworks.likelihood_loss","text":"likelihood_loss(μ, σ, pi, y)\n\nConpute the negative log-likelihood loss for a set of labels y under a Gaussian Mixture Model given by the parameters μ, σ, and pi.\n\n\n\n\n\n","category":"method"},{"location":"#MixtureDensityNetworks.predict-Tuple{MDN, Matrix{<:Number}}","page":"Home","title":"MixtureDensityNetworks.predict","text":"predict(model, X)\n\nMake a prediction with the fitted model given the features specified by X.\n\nX is expected to be a dxn matrix where d is the dimension of the data and n is the number of samples.\n\nReturns a vector of Distributions.MixtureModel.\n\n\n\n\n\n","category":"method"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Distributions, CairoMakie # hide\nn_samples = 1000\nY = rand(Uniform(-10.5, 10.5), 1, n_samples)\nμ = 7sin.(0.75 .* Y) + 0.5 .* Y\nX = rand.(Normal.(μ, 1.0))\nnothing # hide","category":"page"},{"location":"","page":"Home","title":"Home","text":"fig, ax, plt = scatter(X[1,:], Y[1,:], markersize=5)\nsave(\"data.png\", fig)\nnothing # hide","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"}]
}
